ROUTINE SettingsManager

start
    New scr,selection
    Set scr=##class(User.Scr).%New()
    Do {
        Do scr.clearScreen()
        Write "Settings Manager"
        Write !
        Write !,"Add Setting (1)"
        Write !,"Delete Setting (2)"
        Write !,"Exit (0)"
        Write !
        Set selection=scr.input("Select")
        If selection=1 Do addSetting
        If selection=2 Do deleteSetting
    } While selection'=0
    Quit

addSetting
    New title,selection,settingsNum
    Set settingsNum=1
    #; Kill ^Settings(settingsNum)
    Do {
        Do scr.clearScreen()
        Write "Add Setting"
        Write !
        If $Data(^Settings(settingsNum)) {
            Write ^Settings(settingsNum,"title")
        }
        Else {
            Set title=scr.input("Title")
            Set ^Settings(settingsNum,"title")=title
        }
        Write !
        Write !,"Add Key (1)"
        Write !,"Add Field (2)"
        Write !,"Exit (0)"
        Write !
        Set selection=scr.input("Select")
        If selection=1 Do addVariable("keys")
        If selection=2 Do addVariable("fields")
    } While selection'=0
    Quit

addVariable(type)
    New varNum
    Set varNum=$Order(^Settings(settingsNum,type,""),-1) + 1
    Do scr.clearScreen()
    Write "Add "_type_" "_varNum
    Write !
    Set ^Settings(settingsNum,type,varNum,"variable")=scr.input("Variable")
    If type="keys" Set ^Settings(settingsNum,type,varNum,"kombi")=scr.input("Kombi")
    Set ^Settings(settingsNum,type,varNum,"caption")=scr.input("Caption")
    If type="keys" Set ^Settings(settingsNum,type,varNum,"quantor")=scr.input("Quantor")
    Set ^Settings(settingsNum,type,varNum,"head")=scr.input("Head")
    Set ^Settings(settingsNum,type,varNum,"width")=scr.input("Width")
    Quit
    
deleteSetting
    New dump,title
    Do scr.clearScreen()
    Write "Delete Setting"
    Write !!
    Write "Deleting Settings is not implemented yet."

    Do scr.confirm()
    Quit
